'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="UserAccountDB")>  _
Partial Public Class UserAccountStoredProceduresDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.CalorieIntakeManager.My.MySettings.Default.UserAccountDBConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.SelectByID")>  _
	Public Function SelectByID(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="User_ID", DbType:="Decimal(18,0)")> ByVal user_ID As System.Nullable(Of Decimal)) As ISingleResult(Of SelectByIDResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), user_ID)
		Return CType(result.ReturnValue,ISingleResult(Of SelectByIDResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.checkUser")>  _
	Public Function checkUser(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="User_Name", DbType:="NVarChar(MAX)")> ByVal user_Name As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="User_Password", DbType:="NVarChar(MAX)")> ByVal user_Password As String) As ISingleResult(Of checkUserResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), user_Name, user_Password)
		Return CType(result.ReturnValue,ISingleResult(Of checkUserResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.CreateNewAccount")>  _
	Public Function CreateNewAccount(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Full_Name", DbType:="NVarChar(MAX)")> ByVal full_Name As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Gender", DbType:="NVarChar(MAX)")> ByVal gender As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Age", DbType:="Decimal(18,0)")> ByVal age As System.Nullable(Of Decimal), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Height", DbType:="Decimal(18,0)")> ByVal height As System.Nullable(Of Decimal), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Weight", DbType:="Decimal(18,0)")> ByVal weight As System.Nullable(Of Decimal), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="User_Name", DbType:="NVarChar(MAX)")> ByVal user_Name As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="User_Password", DbType:="NVarChar(MAX)")> ByVal user_Password As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), full_Name, gender, age, height, weight, user_Name, user_Password)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.SelectByDescription")>  _
	Public Function SelectByDescription(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Food_Description", DbType:="NVarChar(MAX)")> ByVal food_Description As String) As ISingleResult(Of SelectByDescriptionResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), food_Description)
		Return CType(result.ReturnValue,ISingleResult(Of SelectByDescriptionResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.SelectByFoodID")>  _
	Public Function SelectByFoodID(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Food_ID", DbType:="Decimal(18,0)")> ByVal food_ID As System.Nullable(Of Decimal)) As ISingleResult(Of SelectByFoodIDResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), food_ID)
		Return CType(result.ReturnValue,ISingleResult(Of SelectByFoodIDResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.SelectByFoodName")>  _
	Public Function SelectByFoodName(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Food_Name", DbType:="NVarChar(MAX)")> ByVal food_Name As String) As ISingleResult(Of SelectByFoodNameResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), food_Name)
		Return CType(result.ReturnValue,ISingleResult(Of SelectByFoodNameResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.SelectByAmountPer")>  _
	Public Function SelectByAmountPer(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Amount_Per", DbType:="NVarChar(MAX)")> ByVal amount_Per As String) As ISingleResult(Of SelectByAmountPerResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), amount_Per)
		Return CType(result.ReturnValue,ISingleResult(Of SelectByAmountPerResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.SelectByCalories")>  _
	Public Function SelectByCalories(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Start", DbType:="Decimal(18,0)")> ByVal start As System.Nullable(Of Decimal), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="End", DbType:="Decimal(18,0)")> ByVal [end] As System.Nullable(Of Decimal)) As ISingleResult(Of SelectByCaloriesResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), start, [end])
		Return CType(result.ReturnValue,ISingleResult(Of SelectByCaloriesResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.AddFood")>  _
	Public Function AddFood(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Food_Name", DbType:="NVarChar(MAX)")> ByVal food_Name As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Calories", DbType:="Decimal(18,0)")> ByVal calories As System.Nullable(Of Decimal), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="AddedDateTime", DbType:="DateTime")> ByVal addedDateTime As System.Nullable(Of Date)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), food_Name, calories, addedDateTime)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.AddCalorieGoal")>  _
	Public Function AddCalorieGoal(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="User_ID", DbType:="Decimal(18,0)")> ByVal user_ID As System.Nullable(Of Decimal), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Full_Name", DbType:="NVarChar(MAX)")> ByVal full_Name As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Gender", DbType:="NVarChar(MAX)")> ByVal gender As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Age", DbType:="Decimal(18,0)")> ByVal age As System.Nullable(Of Decimal), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Height", DbType:="Decimal(18,0)")> ByVal height As System.Nullable(Of Decimal), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Weight", DbType:="Decimal(18,0)")> ByVal weight As System.Nullable(Of Decimal), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="User_Name", DbType:="NVarChar(MAX)")> ByVal user_Name As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="User_Password", DbType:="NVarChar(MAX)")> ByVal user_Password As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Calorie_Goal", DbType:="Decimal(18,0)")> ByVal calorie_Goal As System.Nullable(Of Decimal)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), user_ID, full_Name, gender, age, height, weight, user_Name, user_Password, calorie_Goal)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.DeleteHistory")>  _
	Public Function DeleteHistory(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="AddedFood_ID", DbType:="Decimal(18,0)")> ByVal addedFood_ID As System.Nullable(Of Decimal)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), addedFood_ID)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.DeleteAllHistory")>  _
	Public Function DeleteAllHistory() As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo))
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.UpdateAccount")>  _
	Public Function UpdateAccount(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="User_ID", DbType:="Decimal(18,0)")> ByVal user_ID As System.Nullable(Of Decimal), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Full_Name", DbType:="NVarChar(MAX)")> ByVal full_Name As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Gender", DbType:="NVarChar(MAX)")> ByVal gender As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Age", DbType:="Decimal(18,0)")> ByVal age As System.Nullable(Of Decimal), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Height", DbType:="Decimal(18,0)")> ByVal height As System.Nullable(Of Decimal), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Weight", DbType:="Decimal(18,0)")> ByVal weight As System.Nullable(Of Decimal), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="User_Name", DbType:="NVarChar(MAX)")> ByVal user_Name As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="User_Password", DbType:="NVarChar(MAX)")> ByVal user_Password As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), user_ID, full_Name, gender, age, height, weight, user_Name, user_Password)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.DisplayInfo")>  _
	Public Function DisplayInfo(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="FullName", DbType:="NVarChar(50)")> ByVal fullName As String) As ISingleResult(Of DisplayInfoResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), fullName)
		Return CType(result.ReturnValue,ISingleResult(Of DisplayInfoResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InputThreeWordsUser")>  _
	Public Function InputThreeWordsUser(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="FullName", DbType:="NVarChar(MAX)")> ByVal fullName As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="ThreeWords", DbType:="NVarChar(MAX)")> ByVal threeWords As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), fullName, threeWords)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.CheckSecurity")>  _
	Public Function CheckSecurity(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="FullName", DbType:="NVarChar(MAX)")> ByVal fullName As String) As ISingleResult(Of CheckSecurityResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), fullName)
		Return CType(result.ReturnValue,ISingleResult(Of CheckSecurityResult))
	End Function
End Class

Partial Public Class SelectByIDResult
	
	Private _User_ID As Integer
	
	Private _Full_Name As String
	
	Private _Gender As String
	
	Private _Age As Decimal
	
	Private _Height As Decimal
	
	Private _Weight As Decimal
	
	Private _User_Name As String
	
	Private _User_Password As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_User_ID", DbType:="Int NOT NULL")>  _
	Public Property User_ID() As Integer
		Get
			Return Me._User_ID
		End Get
		Set
			If ((Me._User_ID = value)  _
						= false) Then
				Me._User_ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Full_Name", DbType:="NChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property Full_Name() As String
		Get
			Return Me._Full_Name
		End Get
		Set
			If (String.Equals(Me._Full_Name, value) = false) Then
				Me._Full_Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Gender", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Gender() As String
		Get
			Return Me._Gender
		End Get
		Set
			If (String.Equals(Me._Gender, value) = false) Then
				Me._Gender = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Age", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Age() As Decimal
		Get
			Return Me._Age
		End Get
		Set
			If ((Me._Age = value)  _
						= false) Then
				Me._Age = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Height", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Height() As Decimal
		Get
			Return Me._Height
		End Get
		Set
			If ((Me._Height = value)  _
						= false) Then
				Me._Height = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Weight", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Weight() As Decimal
		Get
			Return Me._Weight
		End Get
		Set
			If ((Me._Weight = value)  _
						= false) Then
				Me._Weight = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_User_Name", DbType:="NChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property User_Name() As String
		Get
			Return Me._User_Name
		End Get
		Set
			If (String.Equals(Me._User_Name, value) = false) Then
				Me._User_Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_User_Password", DbType:="NChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property User_Password() As String
		Get
			Return Me._User_Password
		End Get
		Set
			If (String.Equals(Me._User_Password, value) = false) Then
				Me._User_Password = value
			End If
		End Set
	End Property
End Class

Partial Public Class checkUserResult
	
	Private _User_ID As Integer
	
	Private _Full_Name As String
	
	Private _Gender As String
	
	Private _Age As Decimal
	
	Private _Height As Decimal
	
	Private _Weight As Decimal
	
	Private _User_Name As String
	
	Private _User_Password As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_User_ID", DbType:="Int NOT NULL")>  _
	Public Property User_ID() As Integer
		Get
			Return Me._User_ID
		End Get
		Set
			If ((Me._User_ID = value)  _
						= false) Then
				Me._User_ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Full_Name", DbType:="NVarChar(MAX) NOT NULL", CanBeNull:=false)>  _
	Public Property Full_Name() As String
		Get
			Return Me._Full_Name
		End Get
		Set
			If (String.Equals(Me._Full_Name, value) = false) Then
				Me._Full_Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Gender", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Gender() As String
		Get
			Return Me._Gender
		End Get
		Set
			If (String.Equals(Me._Gender, value) = false) Then
				Me._Gender = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Age", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Age() As Decimal
		Get
			Return Me._Age
		End Get
		Set
			If ((Me._Age = value)  _
						= false) Then
				Me._Age = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Height", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Height() As Decimal
		Get
			Return Me._Height
		End Get
		Set
			If ((Me._Height = value)  _
						= false) Then
				Me._Height = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Weight", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Weight() As Decimal
		Get
			Return Me._Weight
		End Get
		Set
			If ((Me._Weight = value)  _
						= false) Then
				Me._Weight = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_User_Name", DbType:="NVarChar(MAX) NOT NULL", CanBeNull:=false)>  _
	Public Property User_Name() As String
		Get
			Return Me._User_Name
		End Get
		Set
			If (String.Equals(Me._User_Name, value) = false) Then
				Me._User_Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_User_Password", DbType:="NVarChar(MAX) NOT NULL", CanBeNull:=false)>  _
	Public Property User_Password() As String
		Get
			Return Me._User_Password
		End Get
		Set
			If (String.Equals(Me._User_Password, value) = false) Then
				Me._User_Password = value
			End If
		End Set
	End Property
End Class

Partial Public Class SelectByDescriptionResult
	
	Private _Food_ID As Integer
	
	Private _Food_Name As String
	
	Private _Food_Description As String
	
	Private _Amount_Per As String
	
	Private _Calories As Decimal
	
	Private _Food_Picture As System.Data.Linq.Binary
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Food_ID", DbType:="Int NOT NULL")>  _
	Public Property Food_ID() As Integer
		Get
			Return Me._Food_ID
		End Get
		Set
			If ((Me._Food_ID = value)  _
						= false) Then
				Me._Food_ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Food_Name", DbType:="NVarChar(MAX) NOT NULL", CanBeNull:=false)>  _
	Public Property Food_Name() As String
		Get
			Return Me._Food_Name
		End Get
		Set
			If (String.Equals(Me._Food_Name, value) = false) Then
				Me._Food_Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Food_Description", DbType:="NVarChar(MAX)")>  _
	Public Property Food_Description() As String
		Get
			Return Me._Food_Description
		End Get
		Set
			If (String.Equals(Me._Food_Description, value) = false) Then
				Me._Food_Description = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Amount_Per", DbType:="NVarChar(MAX) NOT NULL", CanBeNull:=false)>  _
	Public Property Amount_Per() As String
		Get
			Return Me._Amount_Per
		End Get
		Set
			If (String.Equals(Me._Amount_Per, value) = false) Then
				Me._Amount_Per = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Calories", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Calories() As Decimal
		Get
			Return Me._Calories
		End Get
		Set
			If ((Me._Calories = value)  _
						= false) Then
				Me._Calories = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Food_Picture", DbType:="Image", CanBeNull:=true)>  _
	Public Property Food_Picture() As System.Data.Linq.Binary
		Get
			Return Me._Food_Picture
		End Get
		Set
			If (Object.Equals(Me._Food_Picture, value) = false) Then
				Me._Food_Picture = value
			End If
		End Set
	End Property
End Class

Partial Public Class SelectByFoodIDResult
	
	Private _Food_ID As Integer
	
	Private _Food_Name As String
	
	Private _Food_Description As String
	
	Private _Amount_Per As String
	
	Private _Calories As Decimal
	
	Private _Food_Picture As System.Data.Linq.Binary
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Food_ID", DbType:="Int NOT NULL")>  _
	Public Property Food_ID() As Integer
		Get
			Return Me._Food_ID
		End Get
		Set
			If ((Me._Food_ID = value)  _
						= false) Then
				Me._Food_ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Food_Name", DbType:="NVarChar(MAX) NOT NULL", CanBeNull:=false)>  _
	Public Property Food_Name() As String
		Get
			Return Me._Food_Name
		End Get
		Set
			If (String.Equals(Me._Food_Name, value) = false) Then
				Me._Food_Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Food_Description", DbType:="NVarChar(MAX)")>  _
	Public Property Food_Description() As String
		Get
			Return Me._Food_Description
		End Get
		Set
			If (String.Equals(Me._Food_Description, value) = false) Then
				Me._Food_Description = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Amount_Per", DbType:="NVarChar(MAX) NOT NULL", CanBeNull:=false)>  _
	Public Property Amount_Per() As String
		Get
			Return Me._Amount_Per
		End Get
		Set
			If (String.Equals(Me._Amount_Per, value) = false) Then
				Me._Amount_Per = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Calories", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Calories() As Decimal
		Get
			Return Me._Calories
		End Get
		Set
			If ((Me._Calories = value)  _
						= false) Then
				Me._Calories = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Food_Picture", DbType:="Image", CanBeNull:=true)>  _
	Public Property Food_Picture() As System.Data.Linq.Binary
		Get
			Return Me._Food_Picture
		End Get
		Set
			If (Object.Equals(Me._Food_Picture, value) = false) Then
				Me._Food_Picture = value
			End If
		End Set
	End Property
End Class

Partial Public Class SelectByFoodNameResult
	
	Private _Food_ID As Integer
	
	Private _Food_Name As String
	
	Private _Food_Description As String
	
	Private _Amount_Per As String
	
	Private _Calories As Decimal
	
	Private _Food_Picture As System.Data.Linq.Binary
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Food_ID", DbType:="Int NOT NULL")>  _
	Public Property Food_ID() As Integer
		Get
			Return Me._Food_ID
		End Get
		Set
			If ((Me._Food_ID = value)  _
						= false) Then
				Me._Food_ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Food_Name", DbType:="NVarChar(MAX) NOT NULL", CanBeNull:=false)>  _
	Public Property Food_Name() As String
		Get
			Return Me._Food_Name
		End Get
		Set
			If (String.Equals(Me._Food_Name, value) = false) Then
				Me._Food_Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Food_Description", DbType:="NVarChar(MAX)")>  _
	Public Property Food_Description() As String
		Get
			Return Me._Food_Description
		End Get
		Set
			If (String.Equals(Me._Food_Description, value) = false) Then
				Me._Food_Description = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Amount_Per", DbType:="NVarChar(MAX) NOT NULL", CanBeNull:=false)>  _
	Public Property Amount_Per() As String
		Get
			Return Me._Amount_Per
		End Get
		Set
			If (String.Equals(Me._Amount_Per, value) = false) Then
				Me._Amount_Per = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Calories", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Calories() As Decimal
		Get
			Return Me._Calories
		End Get
		Set
			If ((Me._Calories = value)  _
						= false) Then
				Me._Calories = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Food_Picture", DbType:="Image", CanBeNull:=true)>  _
	Public Property Food_Picture() As System.Data.Linq.Binary
		Get
			Return Me._Food_Picture
		End Get
		Set
			If (Object.Equals(Me._Food_Picture, value) = false) Then
				Me._Food_Picture = value
			End If
		End Set
	End Property
End Class

Partial Public Class SelectByAmountPerResult
	
	Private _Food_ID As Integer
	
	Private _Food_Name As String
	
	Private _Food_Description As String
	
	Private _Amount_Per As String
	
	Private _Calories As Decimal
	
	Private _Food_Picture As System.Data.Linq.Binary
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Food_ID", DbType:="Int NOT NULL")>  _
	Public Property Food_ID() As Integer
		Get
			Return Me._Food_ID
		End Get
		Set
			If ((Me._Food_ID = value)  _
						= false) Then
				Me._Food_ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Food_Name", DbType:="NVarChar(MAX) NOT NULL", CanBeNull:=false)>  _
	Public Property Food_Name() As String
		Get
			Return Me._Food_Name
		End Get
		Set
			If (String.Equals(Me._Food_Name, value) = false) Then
				Me._Food_Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Food_Description", DbType:="NVarChar(MAX)")>  _
	Public Property Food_Description() As String
		Get
			Return Me._Food_Description
		End Get
		Set
			If (String.Equals(Me._Food_Description, value) = false) Then
				Me._Food_Description = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Amount_Per", DbType:="NVarChar(MAX) NOT NULL", CanBeNull:=false)>  _
	Public Property Amount_Per() As String
		Get
			Return Me._Amount_Per
		End Get
		Set
			If (String.Equals(Me._Amount_Per, value) = false) Then
				Me._Amount_Per = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Calories", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Calories() As Decimal
		Get
			Return Me._Calories
		End Get
		Set
			If ((Me._Calories = value)  _
						= false) Then
				Me._Calories = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Food_Picture", DbType:="Image", CanBeNull:=true)>  _
	Public Property Food_Picture() As System.Data.Linq.Binary
		Get
			Return Me._Food_Picture
		End Get
		Set
			If (Object.Equals(Me._Food_Picture, value) = false) Then
				Me._Food_Picture = value
			End If
		End Set
	End Property
End Class

Partial Public Class SelectByCaloriesResult
	
	Private _Food_ID As Integer
	
	Private _Food_Name As String
	
	Private _Food_Description As String
	
	Private _Amount_Per As String
	
	Private _Calories As Decimal
	
	Private _Food_Picture As System.Data.Linq.Binary
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Food_ID", DbType:="Int NOT NULL")>  _
	Public Property Food_ID() As Integer
		Get
			Return Me._Food_ID
		End Get
		Set
			If ((Me._Food_ID = value)  _
						= false) Then
				Me._Food_ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Food_Name", DbType:="NVarChar(MAX) NOT NULL", CanBeNull:=false)>  _
	Public Property Food_Name() As String
		Get
			Return Me._Food_Name
		End Get
		Set
			If (String.Equals(Me._Food_Name, value) = false) Then
				Me._Food_Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Food_Description", DbType:="NVarChar(MAX)")>  _
	Public Property Food_Description() As String
		Get
			Return Me._Food_Description
		End Get
		Set
			If (String.Equals(Me._Food_Description, value) = false) Then
				Me._Food_Description = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Amount_Per", DbType:="NVarChar(MAX) NOT NULL", CanBeNull:=false)>  _
	Public Property Amount_Per() As String
		Get
			Return Me._Amount_Per
		End Get
		Set
			If (String.Equals(Me._Amount_Per, value) = false) Then
				Me._Amount_Per = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Calories", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Calories() As Decimal
		Get
			Return Me._Calories
		End Get
		Set
			If ((Me._Calories = value)  _
						= false) Then
				Me._Calories = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Food_Picture", DbType:="Image", CanBeNull:=true)>  _
	Public Property Food_Picture() As System.Data.Linq.Binary
		Get
			Return Me._Food_Picture
		End Get
		Set
			If (Object.Equals(Me._Food_Picture, value) = false) Then
				Me._Food_Picture = value
			End If
		End Set
	End Property
End Class

Partial Public Class DisplayInfoResult
	
	Private _User_ID As Integer
	
	Private _Full_Name As String
	
	Private _Gender As String
	
	Private _Age As Decimal
	
	Private _Height As Decimal
	
	Private _Weight As Decimal
	
	Private _User_Name As String
	
	Private _User_Password As String
	
	Private _Calorie_Goal As System.Nullable(Of Decimal)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_User_ID", DbType:="Int NOT NULL")>  _
	Public Property User_ID() As Integer
		Get
			Return Me._User_ID
		End Get
		Set
			If ((Me._User_ID = value)  _
						= false) Then
				Me._User_ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Full_Name", DbType:="NVarChar(MAX) NOT NULL", CanBeNull:=false)>  _
	Public Property Full_Name() As String
		Get
			Return Me._Full_Name
		End Get
		Set
			If (String.Equals(Me._Full_Name, value) = false) Then
				Me._Full_Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Gender", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Gender() As String
		Get
			Return Me._Gender
		End Get
		Set
			If (String.Equals(Me._Gender, value) = false) Then
				Me._Gender = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Age", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Age() As Decimal
		Get
			Return Me._Age
		End Get
		Set
			If ((Me._Age = value)  _
						= false) Then
				Me._Age = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Height", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Height() As Decimal
		Get
			Return Me._Height
		End Get
		Set
			If ((Me._Height = value)  _
						= false) Then
				Me._Height = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Weight", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Weight() As Decimal
		Get
			Return Me._Weight
		End Get
		Set
			If ((Me._Weight = value)  _
						= false) Then
				Me._Weight = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_User_Name", DbType:="NVarChar(MAX) NOT NULL", CanBeNull:=false)>  _
	Public Property User_Name() As String
		Get
			Return Me._User_Name
		End Get
		Set
			If (String.Equals(Me._User_Name, value) = false) Then
				Me._User_Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_User_Password", DbType:="NVarChar(MAX) NOT NULL", CanBeNull:=false)>  _
	Public Property User_Password() As String
		Get
			Return Me._User_Password
		End Get
		Set
			If (String.Equals(Me._User_Password, value) = false) Then
				Me._User_Password = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Calorie_Goal", DbType:="Decimal(18,0)")>  _
	Public Property Calorie_Goal() As System.Nullable(Of Decimal)
		Get
			Return Me._Calorie_Goal
		End Get
		Set
			If (Me._Calorie_Goal.Equals(value) = false) Then
				Me._Calorie_Goal = value
			End If
		End Set
	End Property
End Class

Partial Public Class CheckSecurityResult
	
	Private _UserSecurityID As Integer
	
	Private _FullName As String
	
	Private _ThreeWords As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserSecurityID", DbType:="Int NOT NULL")>  _
	Public Property UserSecurityID() As Integer
		Get
			Return Me._UserSecurityID
		End Get
		Set
			If ((Me._UserSecurityID = value)  _
						= false) Then
				Me._UserSecurityID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FullName", DbType:="NVarChar(MAX) NOT NULL", CanBeNull:=false)>  _
	Public Property FullName() As String
		Get
			Return Me._FullName
		End Get
		Set
			If (String.Equals(Me._FullName, value) = false) Then
				Me._FullName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ThreeWords", DbType:="NVarChar(MAX) NOT NULL", CanBeNull:=false)>  _
	Public Property ThreeWords() As String
		Get
			Return Me._ThreeWords
		End Get
		Set
			If (String.Equals(Me._ThreeWords, value) = false) Then
				Me._ThreeWords = value
			End If
		End Set
	End Property
End Class
